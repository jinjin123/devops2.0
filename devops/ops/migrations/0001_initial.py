# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-07-07 00:08
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('user_count', models.IntegerField()),
                ('view_count', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Access Record',
                'verbose_name_plural': 'Access Record',
            },
        ),
        migrations.CreateModel(
            name='HardWareInfo',
            fields=[
                ('ip', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('system', models.CharField(max_length=15)),
                ('memory', models.CharField(max_length=15)),
                ('disk', models.CharField(max_length=15)),
                ('cpu', models.IntegerField()),
                ('contractor', models.CharField(max_length=15)),
                ('price', models.IntegerField()),
                ('comments', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('nagios_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Nagios Host ID')),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('internal_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user', models.CharField(max_length=64)),
                ('password', models.CharField(max_length=128)),
                ('ssh_port', models.IntegerField(blank=True, null=True)),
                ('status', models.SmallIntegerField(choices=[(0, 'Normal'), (1, 'Down'), (2, 'No Connect'), (3, 'Error')])),
                ('brand', models.CharField(choices=[('DELL', 'DELL'), ('HP', 'HP'), ('Other', 'Other')], max_length=64)),
                ('model', models.CharField(max_length=64)),
                ('cpu', models.CharField(max_length=64)),
                ('core_num', models.SmallIntegerField(choices=[(2, '2 Cores'), (4, '4 Cores'), (6, '6 Cores'), (8, '8 Cores'), (10, '10 Cores'), (12, '12 Cores'), (14, '14 Cores'), (16, '16 Cores'), (18, '18 Cores'), (20, '20 Cores'), (22, '22 Cores'), (24, '24 Cores'), (26, '26 Cores'), (28, '28 Cores')])),
                ('hard_disk', models.IntegerField()),
                ('memory', models.IntegerField()),
                ('system', models.CharField(choices=[('CentOS', 'CentOS'), ('FreeBSD', 'FreeBSD'), ('Ubuntu', 'Ubuntu')], max_length=32, verbose_name='System OS')),
                ('system_version', models.CharField(max_length=32)),
                ('system_arch', models.CharField(choices=[('x86_64', 'x86_64'), ('i386', 'i386')], max_length=32)),
                ('create_time', models.DateField()),
                ('guarantee_date', models.DateField()),
                ('service_type', models.CharField(choices=[('moniter', 'Moniter'), ('lvs', 'LVS'), ('db', 'Database'), ('analysis', 'Analysis'), ('admin', 'Admin'), ('storge', 'Storge'), ('web', 'WEB'), ('email', 'Email'), ('mix', 'Mix')], max_length=32)),
                ('description', models.TextField()),
                ('administrator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Admin')),
            ],
            options={
                'verbose_name': 'Host',
                'verbose_name_plural': 'Host',
            },
        ),
        migrations.CreateModel(
            name='HostGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('hosts', models.ManyToManyField(blank=True, related_name='groups', to='ops.Host', verbose_name='Hosts')),
            ],
            options={
                'verbose_name': 'Host Group',
                'verbose_name_plural': 'Host Group',
            },
        ),
        migrations.CreateModel(
            name='HostInfo',
            fields=[
                ('ip', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('port', models.IntegerField(default=22)),
                ('group', models.CharField(max_length=15)),
                ('user', models.CharField(max_length=10)),
                ('pwd', models.CharField(max_length=10)),
                ('login_type', models.CharField(choices=[('\u5bc6\u7801\u65b9\u5f0f', '\u5bc6\u7801\u65b9\u5f0f'), ('\u79d8\u94a5\u65b9\u5f0f', '\u79d8\u94a5\u65b9\u5f0f')], max_length=10)),
                ('sudo', models.CharField(blank=True, max_length=10, null=True)),
                ('su', models.CharField(blank=True, max_length=10, null=True)),
                ('us_sudo', models.CharField(choices=[('N', 'N'), ('Y', 'Y')], max_length=10)),
                ('us_su', models.CharField(choices=[('N', 'N'), ('Y', 'Y')], max_length=10)),
                ('key', models.FileField(blank=True, null=True, upload_to='keys')),
                ('alive', models.IntegerField(choices=[(0, 'dead'), (1, 'alive')], default=0)),
                ('bz', models.CharField(blank=True, max_length=128, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('contact', models.CharField(max_length=32)),
                ('telphone', models.CharField(max_length=32)),
                ('address', models.CharField(max_length=128)),
                ('customer_id', models.CharField(max_length=128)),
                ('create_time', models.DateField(auto_now=True)),
                ('groups', models.ManyToManyField(to='auth.Group')),
            ],
            options={
                'verbose_name': 'IDC',
                'verbose_name_plural': 'IDC',
            },
        ),
        migrations.CreateModel(
            name='MaintainLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintain_type', models.CharField(max_length=32)),
                ('hard_type', models.CharField(max_length=16)),
                ('time', models.DateTimeField()),
                ('operator', models.CharField(max_length=16)),
                ('note', models.TextField()),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ops.Host')),
            ],
            options={
                'verbose_name': 'Maintain Log',
                'verbose_name_plural': 'Maintain Log',
            },
        ),
        migrations.CreateModel(
            name='PushCodeEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=30)),
                ('ctime', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-ctime'],
            },
        ),
        migrations.CreateModel(
            name='TopContServer',
            fields=[
                ('ip', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True)),
                ('uptime', models.DateTimeField(auto_now=True)),
                ('acount', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ['-acount'],
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('user', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('pwd', models.CharField(max_length=20)),
                ('phone', models.IntegerField()),
                ('email', models.EmailField(max_length=32)),
                ('ctime', models.DateTimeField(auto_now_add=True)),
                ('uptime', models.DateTimeField(auto_now=True)),
                ('user_type', models.CharField(choices=[('user', 'user'), ('admin', 'admin')], max_length=10)),
                ('group', models.CharField(choices=[('user', 'user'), ('admin', 'admin')], max_length=10, null=True)),
                ('hdimg', models.FileField(blank=True, null=True, upload_to='static/img/head/')),
                ('alive', models.IntegerField(choices=[(0, 'dead'), (1, 'alive')], default=0)),
            ],
        ),
        migrations.CreateModel(
            name='UserLock',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('ip', models.CharField(blank=True, max_length=15, null=True)),
                ('user', models.CharField(max_length=20)),
                ('status', models.IntegerField(default=1)),
                ('uptime', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='usergroup',
            name='group_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ops.UserInfo'),
        ),
        migrations.AddField(
            model_name='topcontserver',
            name='user_id',
            field=models.ManyToManyField(to='ops.UserInfo'),
        ),
        migrations.AddField(
            model_name='pushcodeevent',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ops.UserInfo'),
        ),
        migrations.AlterUniqueTogether(
            name='hostinfo',
            unique_together=set([('ip', 'group')]),
        ),
        migrations.AddField(
            model_name='host',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ops.IDC'),
        ),
    ]
